enum ActionCategory {
  Deploy
  Execute
  RunPlugin
  InstallPlugin
  UninstallPlugin
}

type Action @entity(immutable: true) {
  "unique identifier resolving to transaction hash concatenated with the log index"
  id: ID!

  "category of action e.g. Execute or RunPlugin"
  category: ActionCategory!
  "hardcoded chain id"
  chainId: BigInt!
  "proxy that triggered the action"
  proxy: Proxy!

  "data emitted by the action"
  data: Bytes
  "plugin installed and emitted by the action"
  plugin: Bytes
  "response emitted by the action"
  response: Bytes
  "target used and emitted by the action"
  target: Bytes

  "block of the transaction"
  block: BigInt!
  "hash of the transaction"
  hash: Bytes!
  "timestamp of the transaction"
  timestamp: BigInt!
  "address of the transaction initiator"
  from: Bytes!
}

type Plugin @entity(immutable: true) {
  "unique identifier resolving to the address of the plugin"
  id: ID!

  "address of the plugin"
  address: Bytes!

  "selectors of the methods handled by the plugin"
  methods: [Bytes!]!
  "timestamp of the installation"
  timestamp: BigInt!
}

type Proxy @entity {
  "unique identifier resolving to the address of the proxy"
  id: ID!

  "address of the proxy"
  address: Bytes!
  "hardcoded chain id"
  chainId: BigInt!
  "block of the create transaction"
  block: BigInt!
  "hash of the create transaction"
  hash: Bytes!
  "timestamp of the create transaction"
  timestamp: BigInt!
  "address of the create transaction initiator"
  from: Bytes!

  "entity that triggered the proxy creation"
  operator: Bytes!
  "immutable proxy owner"
  owner: Bytes!

  "list of installed plugins"
  plugins: [Plugin!]!
  "list of proxy actions"
  actions: [Action!]! @derivedFrom(field: "proxy")
}

type Registry @entity(immutable: true) {
  "unique identifier resolving to the address of the registry"
  id: ID!

  "address of the registry"
  address: Bytes!
}
